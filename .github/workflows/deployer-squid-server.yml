name: Deploy squid server

on:
  workflow_dispatch:
    inputs:
      deployment-environment:
        required: true
        type: choice
        options:
          - dev
          - prd
        default: dev
        description: Environment
      deployment-server:
        required: true
        type: choice
        options:
          - a
          - b
        default: a
        description: Server
      tag:
        required: true
        default: "latest"
        type: string
        description: "Docker tag (quay.io)"
      resume-mode:
        required: false
        type: boolean
        default: false
        description: "Resume indexing with existing user (provide DB_USER and DB_SCHEMA below)"
      db-user:
        required: false
        type: string
        description: "Existing DB user for resume mode"
      db-schema:
        required: false
        type: string
        description: "Existing DB schema for resume mode"

jobs:
  deployment:
    if: ${{ inputs.deployment-environment != '' && inputs.deployment-server != '' }}
    name: "Deploy to: ${{ inputs.deployment-environment }} - server ${{ inputs.deployment-server }}"
    runs-on: ubuntu-latest
    environment: ${{ inputs.deployment-environment }}
    steps:
      - name: Trigger deployment
        uses: decentraland/dcl-deploy-action@main
        with:
          dockerImage: "quay.io/decentraland/marketplace-squid-core:${{ inputs.tag }}"
          serviceName: "marketplace-squid-server-${{ inputs.deployment-server }}"
          env: ${{ inputs.deployment-environment }}
          token: ${{ secrets.GITHUB_TOKEN }}
          envVariables: |
            RESUME_MODE=${{ inputs.resume-mode }}
            ${{ inputs.resume-mode == true && format('DB_USER={0}', inputs.db-user) || '' }}
            ${{ inputs.resume-mode == true && format('DB_SCHEMA={0}', inputs.db-schema) || '' }}
